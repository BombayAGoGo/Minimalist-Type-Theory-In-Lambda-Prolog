type and mttType -> mttType -> mttType.
type pair_and mttType -> mttType -> mttTerm -> mttTerm -> mttTerm.
type p1_and, p2_and mttTerm -> mttTerm.

ofType (and B C) KIND IE
    :- ofType B KIND1 IE
    ,  (ofType C KIND2 IE)
    ,  (pts_prop KIND1 KIND2 KIND)
    .
    
of (pair_and B C BB CC) (and B C) IE 
    :- ofType (and B C) _ IE
    ,  (isa BB B IE)
    ,  (isa CC C IE)
    .

of (p1_and Pair) B IE 
    :- of Pair (and B C_) IE
    .

of (p2_and Pair) C IE 
    :- of Pair (and B_ C) IE
    .

hstep (p1_and Pair) (Bb) :- hnf Pair (pair_and B_ C_ Bb Cc_).

hstep (p2_and Pair) (Cc) :- hnf Pair (pair_and B_ C_ Bb_ Cc).

dconv (pair_and B C Bb Cc) (pair_and B' C' Bb' Cc')
    :- (conv B B')
    ,  (conv C C')
    ,  (conv Bb Bb')
    ,  (conv Cc Cc')
    .

dconv (p1_and Pair) (p1_and Pair') 
    :- (conv Pair Pair')
    .

dconv (and B C) (and B' C') 
    :- (conv B B')
    ,  (conv C C')
    .


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                   ESTRAZIONE                                   %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

starify_nonset_ops_type (and B C) Result
    :- starify_nonset_ops_type B B'
    ,  starify_nonset_ops_type C C'
    ,  Result = (and B' C')
    ,  !
    .

collapse_star_ops_type (and B C) Result
    :- collapse_star_ops_type B B'
    ,  collapse_star_ops_type C C'
    ,  spy((B' = extractor_singleton, C' = extractor_singleton
        ,    Result = extractor_singleton)
        , !; Result = (and B' C'))
    ,  !
    .


starify_nonset_ops (pair_and B C BB CC) Result 
    :- starify_nonset_ops BB BB'
    ,  starify_nonset_ops CC CC'
    ,  starify_nonset_ops_type (and B C) (and B' C')
    ,  spy(Result = (pair_and B' C' BB' CC'))
    ,  !
    .

collapse_term (pair_and extractor_singleton extractor_singleton extractor_star extractor_star) Result []
    :- Result = extractor_star
    ,  !
    .

extract_set_ops (pair_and B C BB CC) Result SetList
    :- extract_set_ops BB BB' BList
    ,  extract_set_ops CC CC' CList
    ,  concat [CList, BList] SetList
    ,  collapse_star_ops_type (and B C) (and B' C')
    ,  spy(collapse_term (pair_and B' C' BB' CC') Result [])
    ,  !
    .


starify_nonset_ops (p1_and Pair) Result
    :- starify_nonset_ops Pair Pair'
    ,  spy(Result = (p1_and Pair'))
    ,  !
    .

collapse_term (p1_and extractor_star) Result []
    :- Result = extractor_star
    ,  !
    .

collapse_term (p1_and (pair _B (x\extractor_singleton) BB extractor_star)) Result []
    :- Result = BB
    ,  !
    .

extract_set_ops (p1_and Pair) Result SetList
    :- extract_set_ops Pair Pair' SetList
    ,  spy(collapse_term (p1_and Pair') Result [])
    ,  !
    .


starify_nonset_ops (p2_and Pair) Result
    :- starify_nonset_ops Pair Pair'
    ,  spy(Result = (p2_and Pair'))
    ,  !
    .

collapse_term (p2_and extractor_star) Result []
    :- Result = extractor_star
    ,  !
    .

collapse_term (p2_and (pair extractor_singleton _C extractor_star CC)) Result []
    :- Result = CC
    ,  !
    .

extract_set_ops (p2_and Pair) Result SetList
    :- extract_set_ops Pair Pair' SetList
    ,  spy(collapse_term (p2_and Pair') Result [])
    ,  !
    .

